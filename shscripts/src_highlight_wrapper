#!/usr/bin/env bash

#echo "ARGS: ${@}" >&2
#echo "SRCLANG: ${SRCLANG}" >&2

if command -v source-highlight >/dev/null
then
  declare -a src_hilite_lesspipe_args
  src_hilite_lesspipe_args=( "${@}" )
  _lang=''
  _lang_arg=''

  # stdin is indicated by LESSOPEN starting with '|' being followed by '-'
  # e.g. LESSOPEN="|- /somewhere/shared_scripts/shscripts/src_highlight_wrapper %s"
  # We shouldn't pass the - indicating STDIN through because not all tools understand it
  if [ "${src_hilite_lesspipe_args[0]}" = '-' ]
  then
    src_hilite_lesspipe_args=( "${src_hilite_lesspipe_args[@]:1}" )
  fi

  if [ -n "${SRCLANG}" ]
  then
    _lang="${SRCLANG}"
  fi

  if [ -n "${_lang}" ]
  then
    _lang_arg="--src-lang=${_lang}"
  fi

  function run_src_hilite_lesspipe() {
    local src_hilite_lesspipe_path
   
    if command -v src-hilite-lesspipe.sh &>/dev/null
    then
      src_hilite_lesspipe_path='src-hilite-lesspipe.sh'
    elif command -v dpkg &>/dev/null
    then
      src_hilite_lesspipe_path="$(dpkg -L libsource-highlight-common | grep lesspipe | head -n1)"
      if [ ! -f "${src_hilite_lesspipe_path}" ]
      then
        return 2
      fi
    else
      return 1
    fi

    ${src_hilite_lesspipe_path} "${@}"
  }

  function attempt_source_highlight() {
    local source
    local src_lang
    local lang_def
    local source_higlight_extra_args
    declare -a source_higlight_extra_args
    source="${1}"
    src_lang="${2}"
    lang_def="${3}"
    source_higlight_extra_args=()
    if [ -n "${src_lang}" ]
    then
      source_higlight_extra_args+=( "--src-lang=${src_lang}" )
    elif [ -n "${lang_def}" ]
    then
      source_higlight_extra_args+=( "--lang-def=${lang_def}" )
    fi

    source_higlight_extra_args+=( "${@:4}" )
#    cat <<EOF
#    source-highlight --failsafe "${source_higlight_extra_args[@]}" -f esc --style-file=esc.style -i "${source}"
#EOF
    source-highlight --failsafe ${source_higlight_extra_args[@]} -f esc --style-file=esc.style -i "${source}"
  }

  for source in "${@}"
  do
    case "${source}" in
      *Jenkinsfile|*.gradle)
        attempt_source_highlight "${source}" "${_lang}" 'Groovy.lang'
        ;;
      *.toml)
        attempt_source_highlight "${source}" "${_lang}" 'tml.lang'
        #source-highlight --failsafe -f esc --lang-def=tml.lang --style-file=esc.style -i "${source}"
        ;;
      ''|-)
        if [ -n "${_lang}" ]
        then
          # Cribbed from https://unix.stackexchange.com/a/470518/49416
          # Sadly can't redirect stdin, so have to capture it and then pipe that in.
          # TODO: Surely there's a better way to wire up stdin ?
          # The docs for source-highlight mention "default is stdin" but no idea how to make that work.
          # Sending -i '' and -o 'STDOUT' generates nada (but doesn't create an error either)
          OLD_IFS="${IFS}"
          IFS= file="$(cat)"
          IFS="${OLD_IFS}"
          echo "${file}" |source-highlight --failsafe "${_lang_arg}" -f esc --style-file=esc.style
        else
          run_src_hilite_lesspipe "${src_hilite_lesspipe_args[@]}"
#          if command -v src-hilite-lesspipe.sh &>/dev/null
#          then
#            src-hilite-lesspipe.sh "${src_hilite_lesspipe_args[@]}"
#          fi
        fi
        ;;
      *)
        run_src_hilite_lesspipe "${src_hilite_lesspipe_args[@]}"
#        if command -v src-hilite-lesspipe.sh &>/dev/null
#        then
#          src-hilite-lesspipe.sh "${src_hilite_lesspipe_args[@]}"
#        fi
        ;;
    esac
  done
fi

